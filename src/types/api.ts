import type { AxiosResponse } from 'axios'

export type TServerResponse<T = any> = { data: T; [x: string]: any } & AxiosResponse<T>

export type TSearchResult<T> = {
  total: number
  count: number
  offset: number
  limit: number
  items: Array<T>
}

export type TQueryParams = {
  keyword: string
  sortBy: string
  offset: number
  limit: number
}

export type TImageDetails = {
  url: string
  width: number
  height: number
}

export type TTranslations = Record<string, string>

export type TBorderInfo = {
  dominatingColor: Record<string, number>
  homogeneity: boolean
}

export type TCategory = {
  id: number
  orderBy: number
  hdThumbnailUrl: string
  thumbnailUrl: string
  originalImageUrl: string
  imageUrl: string
  originalImage: TImageDetails
  thumbnail: TImageDetails
  borderInfo: TBorderInfo
  name: string
  nameTranslated: TTranslations
  url: string
  autogeneratedSlug: string
  customSlug: string
  productCount: number
  description: string
  descriptionTranslated: TTranslations
  enabled: boolean
  isSampleCategory: boolean
  seoTitle: string
  seoDescription: string
  alt: TTranslations
}

export type TTaxInfo = {
  taxable: boolean
  defaultLocationIncludedTaxRate: number
  enabledManualTaxes: number[]
  taxClassCode: string
}

export type TProductOptionChoice = {
  text: string
  textTranslated: TTranslations
  priceModifier: number
  priceModifierType: string
}

export type TProductOption = {
  type: string
  name: string
  nameTranslated: TTranslations
  choices: TProductOptionChoice[]
  defaultChoice: string
  required: string
}

export type TShippingSettings = {
  type: string
  methodMarkup: number
  flatRate: number
  disabledMethods: string[]
  enabledMethods: string[]
}

export type TGalleryImages = {
  id: number
  url: string
  thumbnail: string
  originalImageUrl: string
  imageUrl: string
  hdThumbnailUrl: string
  thumbnailUrl: string
  smallThumbnailUrl: string
  width: number
  height: number
  orderBy: number
  borderInfo: {
    dominatingColor: {
      red: number
      green: number
      blue: number
      alpha: number
    }
    homogeneity: boolean
  }
}

export type TProductImage = {
  id: string
  alt: string
  isMain: boolean
  orderBy: number
  image160pxUrl: string
  image400pxUrl: string
  image800pxUrl: string
  image1500pxUrl: string
  imageOriginalUrl: string
}

export type TProductVideo = {
  id: string
  videoCoverId: number
  url: boolean
  embedHtml: string
  providerName: string
  title: string
  image160pxUrl: string
  image400pxUrl: string
  image800pxUrl: string
  image1500pxUrl: string
  imageOriginalUrl: string
}

export type TProductMedia = { images: TProductImage[]; videos: TProductVideo[] }

export type TCategoriesInfo = {
  id: number
  enabled: boolean
}

export type TRelatedCategory = {
  enabled: boolean
  categoryId: number
  productCount: number
}

export type TRelatedProducts = {
  productIds: number[]
  relatedCategory: TRelatedCategory
}

export type TProductDimensions = {
  length: number
  width: number
  height: number
}

export type TAttributeValue = {
  id: number
  name: string
  nameTranslated: TTranslations
  value: string
  valueTranslated: TTranslations
  type: string
  show: string
}

export type TOptionValue = {
  name: string
  nameTranslated: TTranslations
  value: string
  valueTranslated: TTranslations
}

export type TWholesalePrice = {
  quantity: number
  price: number
}

export type TVariation = {
  id: number
  combinationNumber: number
  options: TOptionValue[]
  sku: string
  thumbnailUrl: string
  imageUrl: string
  smallThumbnailUrl: string
  hdThumbnailUrl: string
  originalImageUrl: string
  quantity: number
  unlimited: boolean
  price: number
  wholesalePrices: TWholesalePrice[]
  weight: number
  warningLimit: number
  attributes: TAttributeValue[]
  compareToPrice: number
  minPurchaseQuantity: number
  maxPurchaseQuantity: number
  outOfStockVisibilityBehaviour: string
}

export type TProduct = {
  id: number
  sku: string
  thumbnailUrl: string
  unlimited: boolean
  inStock: boolean
  name: string
  price: number
  priceInProductList: number
  defaultDisplayedPrice: number
  defaultDisplayedPriceFormatted: string
  tax: TTaxInfo
  lowestPriceSettings: {
    lowestPriceEnabled: boolean
  }
  isShippingRequired: boolean
  hasFreeShipping: boolean
  url: string
  autogeneratedSlug: string
  customSlug: ''
  created: string
  updated: string
  createTimestamp: number
  updateTimestamp: number
  productClassId: number
  enabled: boolean
  options: TProductOption[]
  fixedShippingRateOnly: boolean
  fixedShippingRate: number
  shipping: TShippingSettings
  defaultCombinationId: number
  imageUrl: string
  smallThumbnailUrl: string
  hdThumbnailUrl: string
  originalImageUrl: string
  originalImage: TImageDetails
  borderInfo: TBorderInfo
  description: string
  galleryImages: TGalleryImages[]
  media: TProductMedia
  categoryIds: number[]
  categories: TCategoriesInfo[]
  defaultCategoryId: number
  seoTitle: string
  seoDescription: string
  attributes: TAttributeValue[]
  relatedProducts: TRelatedProducts
  combinations: TVariation[]
  dimensions: TProductDimensions
  volume: number
  showOnFrontpage: number
  isSampleProduct: boolean
  googleItemCondition: string
  isGiftCard: boolean
  discountsAllowed: boolean
  nameYourPriceEnabled: boolean
}
